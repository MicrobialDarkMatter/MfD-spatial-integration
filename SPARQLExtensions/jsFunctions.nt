[] http://www.ontotext.com/js#:register '''
    function checkIfChild(parent, child) {
        let parentLevel = Math.floor((parent.lastIndexOf("1") - 3) / 2);

        let parentSignificantBits = 3 + 2 * parentLevel;
        let parentSubstring = parent.substring(0, parentSignificantBits);

        return child.substring(0, parentSignificantBits) === parentSubstring;
    }

    function getS2BinaryID(latitude, longitude, level) {
        const point = nodes2ts.S2LatLng.fromDegrees(latitude, longitude).toPoint();

        const cellID = nodes2ts.S2CellId.fromPoint(point).parentL(level);

        const decimalID = BigInt(cellID.id);

        console.log(cellID + " " + decimalID + " " + decimalID.toString(2).padStart(64, '0'));

        return decimalID.toString(2).padStart(64, '0');
    }

    function getParentCell(inputCell, level) {
        if (level < 0 || level > 30 || !Number.isInteger(level)){
            throw new Error("The S2 level must be an integer value in the range [0, 30].");
        }
        else {
            if (level < 30){
                var parentCell = inputCell.slice(0, 3 + 2 * level) + "1";
            }
            else {
                var parentCell = inputCell.slice(0, 3 + 2 * level);
            }
            
            parentCell = parentCell.padEnd(64, "0");
            return parentCell;
        }
    }
'''